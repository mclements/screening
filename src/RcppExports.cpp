// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include "../inst/include/screening.h"
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// screening_model_1_predictions
Rcpp::DataFrame screening_model_1_predictions(std::vector<double> t, std::vector<double> tj, double shape1, double scale1, double shape2, double scale2, double beta, double tol);
RcppExport SEXP _screening_screening_model_1_predictions(SEXP tSEXP, SEXP tjSEXP, SEXP shape1SEXP, SEXP scale1SEXP, SEXP shape2SEXP, SEXP scale2SEXP, SEXP betaSEXP, SEXP tolSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::vector<double> >::type t(tSEXP);
    Rcpp::traits::input_parameter< std::vector<double> >::type tj(tjSEXP);
    Rcpp::traits::input_parameter< double >::type shape1(shape1SEXP);
    Rcpp::traits::input_parameter< double >::type scale1(scale1SEXP);
    Rcpp::traits::input_parameter< double >::type shape2(shape2SEXP);
    Rcpp::traits::input_parameter< double >::type scale2(scale2SEXP);
    Rcpp::traits::input_parameter< double >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    rcpp_result_gen = Rcpp::wrap(screening_model_1_predictions(t, tj, shape1, scale1, shape2, scale2, beta, tol));
    return rcpp_result_gen;
END_RCPP
}
// screening_model_1_likes
std::vector<double> screening_model_1_likes(Rcpp::List inputs, double shape1, double scale1, double shape2, double scale2, double beta, double tol);
RcppExport SEXP _screening_screening_model_1_likes(SEXP inputsSEXP, SEXP shape1SEXP, SEXP scale1SEXP, SEXP shape2SEXP, SEXP scale2SEXP, SEXP betaSEXP, SEXP tolSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type inputs(inputsSEXP);
    Rcpp::traits::input_parameter< double >::type shape1(shape1SEXP);
    Rcpp::traits::input_parameter< double >::type scale1(scale1SEXP);
    Rcpp::traits::input_parameter< double >::type shape2(shape2SEXP);
    Rcpp::traits::input_parameter< double >::type scale2(scale2SEXP);
    Rcpp::traits::input_parameter< double >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    rcpp_result_gen = Rcpp::wrap(screening_model_1_likes(inputs, shape1, scale1, shape2, scale2, beta, tol));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_screening_screening_model_1_predictions", (DL_FUNC) &_screening_screening_model_1_predictions, 8},
    {"_screening_screening_model_1_likes", (DL_FUNC) &_screening_screening_model_1_likes, 7},
    {NULL, NULL, 0}
};

RcppExport void R_init_screening(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
